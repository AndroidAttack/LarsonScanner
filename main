//Larson Scanner assignment for RBT173
//Andromeda M. de Anda 12/16/2021
// code resource from: https://create.arduino.cc/projecthub/munir03125344286/find-distance-with-leds-and-ultrasonic-sensor-c3dbc1
// code resource also from:https://arduinogetstarted.com/tutorials/arduino-serial-plotter

//this is setting a constant variable for trigPin and echoPin
const int trigPin = 12;
const int echoPin = 13;
//setting a variable for analog pins to LED output
const int LED1 = A0;
const int LED2 = A1;
const int LED3 = A2;
const int LED4 = A3;
const int LED5 = A4;
const int LED6 = A5;
const int LED7 = 2;
//initalize duration and distance to zero
int duration = 0;
int distance = 0;

void setup() 
{
  //setting basic function to trigpin and echopin
  pinMode(trigPin , OUTPUT);
  pinMode(echoPin , INPUT);
  // setting basic function for leds
  pinMode(LED1 , OUTPUT);
  pinMode(LED2 , OUTPUT);
  pinMode(LED3 , OUTPUT);
  pinMode(LED4 , OUTPUT);
  pinMode(LED5 , OUTPUT);
  pinMode(LED6 , OUTPUT);
  pinMode(LED7 , OUTPUT);
  //to use serial monitor
  Serial.begin(9600);

}

void loop()
{
  //allow to read from analog pins
  int p1 = analogRead(A0);
  int p2 = analogRead(A1);
  int p3 = analogRead(A2);
  int p4 = analogRead(A3);
  int p5 = analogRead(A4);
  int p6 = analogRead(A5);
  int p7 = analogRead(2);
  //print the results for analog pins
  Serial.print(p1);
  Serial.print(" "); 
  Serial.print(p2);
  Serial.print(" "); 
  Serial.print(p3);
  Serial.print(" "); 
  Serial.println(p4);
  Serial.print(" "); 
  Serial.println(p5);
  Serial.print(" "); 
  Serial.println(p6);
  Serial.print(" "); 
  Serial.println(p7);

 digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);  
  duration = pulseIn(echoPin, HIGH);
  distance = duration/58.2;
// if object is in certain distance in cm, turn high or else turn off 
  if ( distance <= 7 )
  {
    digitalWrite(LED1, HIGH);
  }
  else
  {
    digitalWrite(LED1, LOW);
  }
  if ( distance <= 14 )
  {
    digitalWrite(LED2, HIGH);
  }
  else
  {
    digitalWrite(LED2, LOW);
  }
  if ( distance <= 21 )
  {
    digitalWrite(LED3, HIGH);
  }
  else
  {
    digitalWrite(LED3, LOW);
  }
  if ( distance <= 28 )
  {
    digitalWrite(LED4, HIGH);
  }
  else
  {
    digitalWrite(LED4, LOW);
  }
  if ( distance <= 35 )
  {
    digitalWrite(LED5, HIGH);
  }
  else
  {
    digitalWrite(LED5, LOW);
  }
  if ( distance <= 42 )
  {
    digitalWrite(LED6, HIGH);
  }
  else
  {
    digitalWrite(LED6, LOW);
  }
  if ( distance <= 49 )
  {
    digitalWrite(LED7, HIGH);
  }
  else
  {
    digitalWrite(LED7, LOW);
  }
  delay(100);
  
}
